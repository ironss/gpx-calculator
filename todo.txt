Todo
====

* Create an overlay for a map.

* Pass a 'scale' parameter, and calculate the time and distance intervals from that, 
  rather than specifying time and distance explicitly. It might need map scale and
  viewing distance.

* How do we specify data to be stored with each calculated point? Or do we just store 
  everythings for each point (lat, lon, time, track time, track distance, speed, 
  average speed, distance and bearing to next point, etc).





5. Download tracks from Android phone -- SensorRecord

9. Decide how to archive tracks:
   * where on PC    -- done
   * where to back up  -- done
   * file name  -- done
   * track name  -- done
   * details of the recording device -- done
   * description of track 

11. After downloading and renaming tracks, add them to a GIT repository and 
    commit them. Push to remote server for backup.

12. It is possible to transfer a track from one device to another. The system
    then finds the old track on a different device, and thinks it is a
    different track. Need ensure that content is identical, not filename.

13. Ensure that short tracks are rejected. A short track is one with fewer than
    (say) 10 trackpoints, no matter how far apart they are. (I thought this was
    already done, but it seems to have got lost)

14. When processing a filesystem, use some type of search algorithm, rather 
    than an absolute path name. Otherwise it does not work on new Ubuntu 
    systems, where USB devices are mounted on /media/<username>/<media-id>/, 
    rather than /media/<media-id>/. Perhaps search /media/*
    

Track and file name are identified as
* date and time of first trackpoint
* manufacturer - model - serial_number
* application

eg. 20130312_122334Z-garmin_72h-382.1055.173.gpx
    20130326_191105Z-holux_1000c-00.1B.C1.06.F5.80.gpx
    20130326_191553Z-vf845-78.1D.BA.13.07.C1-oruxmaps.gpx
    20130311_161636-ideos_x3-10.C6.1F.56.EC.45-mxmariner.gpx


Done
====

* Tests for distance_between() -- DONE

* Tests for bearing()          -- DONE

* Tests for destination()      -- DONE

* Tests for date parser        -- DONE

* Use luaunit test framework   -- DONE

* luaunit: hide stacktrace     -- DONE

* luaunit: support for disabled tests -- DONE

* luaunit: more 'expect' methods (isnil, isnumber, notequals, etc)  -- DONE

* Generate time waypoints      -- DONE

* Generate distance waypoints  -- DONE

* Generate absolute-time waypoints -- DONE

* Verify that initial segment works correctly -- DONE

* Test for track calculations   -- DONE

* Use pure lua XML parser and creator -- DONE

* Tests for XML parser                -- DONE

* Tests for output format             -- DONE






1. Download data from Holux 1000C and save in separate GPX files -- done

2. Download current track data from Garmin 72H -- done

3. Download tracks from Android phone -- MX Mariner  -- done

4. Download tracks from Android phone -- Orux Maps  -- done

6. Ensure that track has a sensible name, probably the same  -- done
   as the file name.
   
7. After downloading, check that file does not already exist with identical content. -- use version control

8. Describe how to set up udev for the Garmin device -- done

10. Garmin file name must include time of first trackpoint.  -- done
    But it has multiple track segments which should be separate tracks.
    It has multiple track -- all of the save tracks.
    Need to call a separate program to sort out these issues
    


Waypoint data
=============

* Local time and date
* UTC time and date
* Time elapsed from start of track
* Position (latitude and longitude)
* Speed


    (*) 12:34Z  2.6kn
        +00:15:39
        
        
        2013-03-29 12:34:29Z
